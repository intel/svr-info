<!--
 * Copyright (C) 2023 Intel Corporation
 * SPDX-License-Identifier: MIT
-->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>System Health Inspector</title>
    <link rel="icon" type="image/x-icon" href="https://www.intel.com/favicon.ico">
    <meta name="viewport" content="width=device-width">

    <link rel="stylesheet" href="https://unpkg.com/normalize.css@8.0.1/normalize.css"
        integrity="sha384-M86HUGbBFILBBZ9ykMAbT3nVb0+2C7yZlF8X2CiKNpDOQjKroMJqIeGZ/Le8N2Qp" crossorigin="anonymous"
        referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://unpkg.com/purecss@2.0.6/build/pure-min.css"
        integrity="sha384-Uu6IeWbM+gzNVXJcM9XV3SohHtmWE+3VGi496jvgX1jyvDTXfdK+rfZc8C1Aehk5" crossorigin="anonymous"
        referrerpolicy="no-referrer" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/d3-flame-graph@4.1.3/dist/d3-flamegraph.css">
    <script type="text/javascript" src="https://d3js.org/d3.v7.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/d3-flame-graph@4.1.3/dist/d3-flamegraph.min.js"></script>
    <script src="https://unpkg.com/chart.js@3.7.1/dist/chart.min.js"
        integrity="sha384-7NrRHqlWUj2hJl3a/dZj/a1GxuQc56mJ3aYsEnydBYrY1jR+RSt6SBvK3sHfj+mJ" crossorigin="anonymous"
        referrerpolicy="no-referrer"></script>

    <style>
        .content {
            padding: 0 2em;
            line-height: 1.6em;
        }

        .content h2 {
            font-weight: 300;
            color: #888;
        }

        .content h2:before {
            content: '';
            display: block;
            position: relative;
            width: 0;
            height: 5em;
            margin-top: -5em
        }

        header {
            position: fixed;
            top: 0;
            background-color: whitesmoke;
            z-index: 99;
            width: 100%;
            text-align: center;
            margin: 0;
            color: #07578c;
            border-bottom: 1px solid #eee;
        }

        header h1 {
            margin: 0.2em 0;
            font-size: 3em;
            font-weight: 300;
        }

        /* Style the tab */
        .tab {
            position: fixed;
            top: 67px;
            z-index: 99;
            height: 46px;
            width: 100%;
            background-color: #f5f5f5;
        }

        /* Style the buttons that are used to open the tab content */
        .tab button {
            background-color: inherit;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
            background-color: #ccc;
            width: 175px;
        }

        /* Change background color of buttons on hover */
        .tab button:hover {
            background-color: #ddd;
        }

        /* Create an active/current tablink class */
        .tab button.active {
            background-color: #fff;
        }

        /* Style the tab content */
        .tabcontent {
            position: relative;
            top: 115px;
            display: none;
            padding: 0px 0px;
        }

        .tabdefault {
            display: block;
        }

        .tabnotdefault {
        }

        .master {
            overflow: hidden;
        }

        .sidebar {
            height: 100%;
            width: 0;
            position: fixed;
            z-index: 1;
            top: 113px;  /* at the base of the tabs */
            left: 0;
            background-color: #111;
            overflow-x: hidden;
            transition: 0.5s;
            padding-top: 60px;
            padding-left: 0px;
        }

        .sidebar h1 {
            position: absolute;
            top: 0;
            padding: 0px 8px 8px 35px;
            text-decoration: none;
            color: #fff;
            background-color: #1f8dd6;
            display: block;
            transition: 0.3s;
        }

        .sidebar a {
            padding: 8px 8px 8px 35px;
            text-decoration: none;
            color: #818181;
            display: block;
            transition: 0.3s;
        }

        .sidebar a:hover {
            color: #f1f1f1;
        }

        .sidebar .togglebtn {
            position: absolute;
            top: 0;
            right: 0px;
            font-size: 25px;
            padding-left: 5px;
            color: #ccc;
            background-color: #1f8dd6;
        }

        .sidebar .togglebtn:hover {
            color: #666;
        }

        #myConfigurationContent {
            transition: margin-left .5s;
        }
    </style>
    <noscript>
        <style type="text/css">
            .tabcontent {display:block;}
            .tabnotdefault {left: 140px;}
        </style>
    </noscript>
</head>

<body>
    <header>
        <h1>Intel&reg; System Health Inspector</h1>
    </header>
    <nav class="tab">
        {{$reportGen := .}}
        {{range $i, $report := $reportGen.Reports}}
        <button class="tablinks" onclick='openTab(event, {{print .Name "Content"}})' {{if eq $i 0}} id="defaultOpen" {{end}}>{{.Name}}</button>
        {{end}}
    </nav>
    {{$reportGen := .}}
    {{range $i, $report := $reportGen.Reports}}
        {{if eq $i 0}}
        <div id="{{.Name}}Content" class="tabcontent tabdefault">
            <main class="content">
                <div id="mySidebar" class="sidebar">
                    <a href="#" style="position: absolute;top: 0; padding-left: 7px; padding-right: 27px; color: #fff; background-color: #1f8dd6">CONTENTS</a>
                    <a href="javascript:void(0)" class="togglebtn" onclick="toggleNav()">&lt;</a>
                    {{$reportGen.RenderMenuItems .}}
                </div>
                <div id="myConfigurationContent">
                    <noscript>
                        <h3>JavaScript is disabled. Functionality is limited.</h3>
                    </noscript>
                    {{range .Notes}}
                    <h3>{{.}}</h3>
                    {{end}}
                    {{range .Tables}}
                    <section>
                        {{$reportGen.RenderDataTable . $report.RefData}}
                    </section>
                    {{end}}
                </div>
            </main>
        </div>
        {{else}}
        <div id="{{.Name}}Content" class="tabcontent tabnotdefault">
            <main class="content">
                {{range .Notes}}
                <h3>{{.}}</h3>
                {{end}}
                {{range .Tables}}
                <section>
                    {{$reportGen.RenderDataTable . $report.RefData}}
                </section>
                {{end}}
                <h3>&nbsp;</h3>
            </main>
        </div>
        {{end}}
    {{end}}
    <script>
        const widthOpen="150px"
        const widthClosed="30px"
        function openNav() {
            document.getElementById("mySidebar").style.width = widthOpen;
            document.getElementById("myConfigurationContent").style.marginLeft = widthOpen;
            document.querySelector(".togglebtn").innerHTML="<"
        }

        function closeNav() {
            document.getElementById("mySidebar").style.width = widthClosed;
            document.getElementById("myConfigurationContent").style.marginLeft= widthClosed;
            document.querySelector(".togglebtn").innerHTML=">"
        }

        function toggleNav() {
            if (document.getElementById("mySidebar").style.width !== widthOpen) {
                openNav()
            } else {
                closeNav()
            }
        }
        // open on startup
        openNav()
    </script>
    <script>
        function openTab(evt, tabName) {
            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }

            // Show the current tab, and add an "active" class to the button that opened the tab
            document.getElementById(tabName).style.display = "block";
            evt.currentTarget.className += " active";
        }
        // Get the element with id="defaultOpen" and click on it
        document.getElementById("defaultOpen").click();
    </script>
</body>

</html>